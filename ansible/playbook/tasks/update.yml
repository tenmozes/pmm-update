---
# This playbook contains tasks executed during PMM Server update.

- hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    pmm_packages:
      - percona-grafana
      - percona-prometheus
      - percona-victoriametrics
      - percona-qan-api2
      - percona-qan-app
      - percona-dashboards
      - percona-alertmanager
      - pmm-server
      - pmm-managed
      - pmm-update
      - percona-clickhouse-client
      - percona-clickhouse-server
      - pmm2-client
      - dbaas-controller

  tasks:
    # Replace forking type with simple. New config will be applied after next reboot.
    - name: Configure systemd
      when: ansible_virtualization_type != "docker"
      copy:
        src: supervisord.service
        dest: /usr/lib/systemd/system/supervisord.service
        mode: 0644

    - name: Remove old supervisord service confiuration
      when: ansible_virtualization_type != "docker"
      file:
        path: /etc/systemd/system/supervisord.service
        state: absent

    # See https://github.com/Supervisor/supervisor/issues/1264 for explanation
    # why we do reread + stop/remove/add instead of using supervisorctl Ansible module.

    - name: Reread supervisord configuration
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Remove old packages
      yum:
        state: absent
        name:
          - mariadb-libs  # https://jira.percona.com/browse/PMM-5215

    # Split download and update to produce a bit more of progress output.
    #
    # Local repo is enabled for a feature builds that add new packages
    # that are not in the public repository yet.
    # pmm-update's own tests fail in that case.

    - name: Download pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest
        download_only: yes
        enablerepo: local

    - name: Update pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest
        enablerepo: local

    - name: Update system packages
      yum:
        name: '*'
        state: latest
        security: yes

    # Fix things that should be fixed before restarts.

    - name: Check pg_stat_statements extension
      postgresql_ext:
        db: postgres
        name: pg_stat_statements

    # https://jira.percona.com/browse/PMM-5271
    - name: Check volume size
      when: ansible_virtualization_type != "docker"
      replace:
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        regexp: 'set -o errexit'
        replace: ''

    - name: Update nginx configuration
      file: name=/etc/nginx/conf.d/default.conf state=absent

    - name: Check nginx configuration
      command: nginx -t
      changed_when: False

    - name: Enable external snapshorts in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_enabled
        value: "true"

    - name: Set snapshot server URL in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_url
        value: https://snapshots-g635.percona.com

    - name: Set name for snapshot server in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_name
        value: Share with Percona

    - name: Create working directory for Alertmanager
      file: path=/srv/alertmanager/data state=directory owner=pmm group=pmm

    # restart pmm-managed first as it may update supervisord configuration on start
    - name: Restart pmm-managed
      command: supervisorctl {{ item }} pmm-managed
      changed_when: True
      with_items: ['stop', 'remove', 'add']

    # give pmm-managed time to update supervisord configuration,
    # and give update UI time to catch up after pmm-managed restart
    - name: Wait for pmm-managed
      pause: seconds=5

    - name: Reread supervisord configuration again
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Restart services
      command: supervisorctl {{ item.1 }} {{ item.0 }}
      changed_when: True
      with_nested:
        - - nginx
          - postgresql
          - prometheus
          - victoriametrics
          - alertmanager
          - clickhouse
          - grafana
          - qan-api2
          - pmm-agent
        - ['stop', 'remove', 'add']

    # set folder names of panels to format that's supported by grafana-cli
    - name: Rename Grafana community panels
      command: /usr/share/percona-dashboards/fix-panels.py
      changed_when: False

    - name: Start Grafana dashboards update
      command: supervisorctl start dashboard-upgrade
      changed_when: True

    - name: Update/restart other services
      command: supervisorctl update
      register: update_result
      changed_when: "'updated' in update_result.stdout"

    - name: Check other services
      debug: var=update_result.stdout_lines

    # SIGUSR2 is sent to supervisord by pmm-managed right before the update to for logging to work correctly.
    # We use that fact to show what was restarted during the update.
    - name: Get supervisord log
      shell: supervisorctl maintail -100000 | tac | awk '!flag; /received SIGUSR2/{flag = 1};' | tac
      register: maintail_result
      changed_when: False

    - name: Check supervisord log
      debug: var=maintail_result.stdout_lines
